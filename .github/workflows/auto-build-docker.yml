name: Build and Push Docker Image

on:
  # 手动触发
  workflow_dispatch:
  # 每周一早上 7:00 (UTC+8 中国时间)
  schedule:
    - cron: '0 23 * * 0' # GitHub Actions 使用 UTC 时间，这里是周日 23:00 UTC == 周一 07:00 CST

permissions:
  contents: read
  packages: write  # 推送镜像到 GHCR
  id-token: write

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Workflow Repo
        uses: actions/checkout@v4

      - name: Checkout Joplin Source
        uses: actions/checkout@v4
        with:
          repository: 'laurent22/joplin'
          ref: dev
          path: joplin

      - name: Prepare yarn
        run: corepack enable

      - name: Install Joplin dependencies
        working-directory: ./joplin
        run: yarn install

      - name: Build Joplin Web
        working-directory: ./joplin/packages/app-mobile
        run: yarn web

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set image tag
        id: vars
        run: echo "tag=$(date +'%Y%m%d-%H%M%S')" >> "$GITHUB_OUTPUT"

      # 新增：预先计算全小写的镜像名
      - name: Compute lowercase image name
        id: prep
        shell: bash
        run: echo "image=ghcr.io/${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ steps.prep.outputs.image }}:latest
            ${{ steps.prep.outputs.image }}:${{ steps.vars.outputs.tag }}

  cleanup_old_images:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Delete old container images (keep latest 5)
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 4
          delete-only-pre-release-versions: true
